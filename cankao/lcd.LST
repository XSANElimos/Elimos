C51 COMPILER V9.00   LCD                                                                   03/29/2022 19:59:11 PAGE 1   


C51 COMPILER V9.00, COMPILATION OF MODULE LCD
OBJECT MODULE PLACED IN lcd.OBJ
COMPILER INVOKED BY: C:\Keil\C51\BIN\C51.EXE lcd.c BROWSE DEBUG OBJECTEXTEND

line level    source

   1          #include "lcd.h"
   2          
   3          /*******************************************************************************
   4          * 函 数 名         : Lcd1602_Delay1ms
   5          * 函数功能                 : 延时函数，延时1ms
   6          * 输    入         : c
   7          * 输    出         : 无
   8          * 说    名         : 该函数是在12MHZ晶振下，12分频单片机的延时。
   9          *******************************************************************************/
  10          
  11          void Lcd1602_Delay1ms(uint c)   //误差 0us
  12          {
  13   1          uchar a,b;
  14   1              for (; c>0; c--)
  15   1              {
  16   2                       for (b=199;b>0;b--)
  17   2                       {
  18   3                              for(a=1;a>0;a--);
  19   3                       }      
  20   2              }
  21   1              
  22   1      }
  23          
  24          #ifndef         LCD1602_4PINS    //当没有定义这个LCD1602_4PINS时
              void LCD_WriteCmd(uchar com)      //写入命令
              {
                      LCD1602_E = 0;     //使能
                      LCD1602_RS = 0;    //选择发送命令
                      LCD1602_RW = 0;    //选择写入
                      
                      LCD1602_DATAPINS = com;     //放入命令
                      Lcd1602_Delay1ms(1);            //等待数据稳定
              
                      LCD1602_E = 1;            //写入时序
                      Lcd1602_Delay1ms(5);      //保持时间
                      LCD1602_E = 0;
              }
              #else 
  39          void LCD_WriteCmd(uchar com)      //写入命令
  40          {
  41   1              LCD1602_E = 0;   //使能清零
  42   1              LCD1602_RS = 0;  //选择写入命令
  43   1              LCD1602_RW = 0;  //选择写入
  44   1      
  45   1              LCD1602_DATAPINS = com; //由于4位的接线是接到P0口的高四位，所以传送高四位不用改
  46   1              Lcd1602_Delay1ms(1);
  47   1      
  48   1              LCD1602_E = 1;   //写入时序
  49   1              Lcd1602_Delay1ms(5);
  50   1              LCD1602_E = 0;
  51   1      
  52   1      //      Lcd1602_Delay1ms(1);
  53   1              LCD1602_DATAPINS = com << 4; //发送低四位
  54   1              Lcd1602_Delay1ms(1);
  55   1      
C51 COMPILER V9.00   LCD                                                                   03/29/2022 19:59:11 PAGE 2   

  56   1              LCD1602_E = 1;   //写入时序
  57   1              Lcd1602_Delay1ms(5);
  58   1              LCD1602_E = 0;
  59   1      }
  60          #endif
  61          /*******************************************************************************
  62          * 函 数 名         : LcdWriteData
  63          * 函数功能                 : 向LCD写入一个字节的数据
  64          * 输    入         : dat
  65          * 输    出         : 无
  66          *******************************************************************************/                   
  67          #ifndef         LCD1602_4PINS              
              void LCD_WriteData(uchar dat)                   //写入数据
              {
                      LCD1602_E = 0;  //使能清零
                      LCD1602_RS = 1; //选择输入数据
                      LCD1602_RW = 0; //选择写入
              
                      LCD1602_DATAPINS = dat; //写入数据
                      Lcd1602_Delay1ms(1);
              
                      LCD1602_E = 1;   //写入时序
                      Lcd1602_Delay1ms(5);   //保持时间
                      LCD1602_E = 0;
              }
              #else
  82          void LCD_WriteData(uchar dat)                   //写入数据
  83          {
  84   1              LCD1602_E = 0;    //使能清零
  85   1              LCD1602_RS = 1;   //选择写入数据
  86   1              LCD1602_RW = 0;   //选择写入
  87   1      
  88   1              LCD1602_DATAPINS = dat; //由于4位的接线是接到P0口的高四位，所以传送高四位不用改
  89   1              Lcd1602_Delay1ms(1);
  90   1      
  91   1              LCD1602_E = 1;    //写入时序
  92   1              Lcd1602_Delay1ms(5);
  93   1              LCD1602_E = 0;
  94   1      
  95   1              LCD1602_DATAPINS = dat << 4; //写入低四位
  96   1              Lcd1602_Delay1ms(1);
  97   1      
  98   1              LCD1602_E = 1;    //写入时序
  99   1              Lcd1602_Delay1ms(5);
 100   1              LCD1602_E = 0;
 101   1      }
 102          #endif
 103          /*******************************************************************************
 104          * 函 数 名       : LcdInit()
 105          * 函数功能               : 初始化LCD屏
 106          * 输    入       : 无
 107          * 输    出       : 无
 108          *******************************************************************************/                   
 109          #ifndef         LCD1602_4PINS
              void LcdInit()                                            //LCD初始化子程序
              {
                      LCD_WriteCmd(0x38);  //开显示
                      LCD_WriteCmd(0x0c);  //开显示不显示光标
                      LCD_WriteCmd(0x06);  //写一个指针加1
                      LCD_WriteCmd(0x01);  //清屏
                      LCD_WriteCmd(0x80);  //设置数据指针起点
              }
C51 COMPILER V9.00   LCD                                                                   03/29/2022 19:59:11 PAGE 3   

              #else
 119          void LCD_Init()                                           //LCD初始化子程序
 120          {
 121   1              LCD_WriteCmd(0x32);      //将8位总线转为4位总线
 122   1              LCD_WriteCmd(0x28);      //在四位线下的初始化
 123   1              LCD_WriteCmd(0x0c);  //开显示不显示光标
 124   1              LCD_WriteCmd(0x06);  //写一个指针加1
 125   1              LCD_WriteCmd(0x01);  //清屏
 126   1              LCD_WriteCmd(0x80);  //设置数据指针起点
 127   1      }
 128          #endif
 129          
 130          
 131          
 132          void LCD_Clear()
 133          {
 134   1              LCD_WriteCmd(0x01);
 135   1              LCD_WriteCmd(0x80);     
 136   1      }
 137          
 138          //在任何位置显示字符串
 139          
 140          void LCD_Dispstring(u8 x,u8 line,u8 *p)   
 141          {
 142   1              char i=0;
 143   1              if(line<1)         //第一行显示
 144   1              {       
 145   2                      while(*p!='\0')
 146   2                      {
 147   3                              if(i<16-x)
 148   3                              {
 149   4                                      LCD_WriteCmd(0x80+i+x); 
 150   4                              }
 151   3                              else
 152   3                              {
 153   4                                      LCD_WriteCmd(0x40+0x80+i+x-16); 
 154   4                              }
 155   3                              LCD_WriteData(*p);
 156   3                              p++;
 157   3                              i++;    
 158   3                      }       
 159   2              }
 160   1              else               //第2行显示
 161   1              {
 162   2                      while(*p!='\0')
 163   2                      {
 164   3                              if(i<16-x)
 165   3                              {
 166   4                                      LCD_WriteCmd(0x80+0x40+i+x);    
 167   4                              }
 168   3                              else
 169   3                              {
 170   4                                      LCD_WriteCmd(0x80+i+x-16);      
 171   4                              }
 172   3                              LCD_WriteData(*p);
 173   3                              p++;
 174   3                              i++;    
 175   3                      }       
 176   2              }               
 177   1      }
 178          
 179          
C51 COMPILER V9.00   LCD                                                                   03/29/2022 19:59:11 PAGE 4   



MODULE INFORMATION:   STATIC OVERLAYABLE
   CODE SIZE        =    280    ----
   CONSTANT SIZE    =   ----    ----
   XDATA SIZE       =   ----    ----
   PDATA SIZE       =   ----    ----
   DATA SIZE        =   ----       5
   IDATA SIZE       =   ----    ----
   BIT SIZE         =   ----    ----
END OF MODULE INFORMATION.


C51 COMPILATION COMPLETE.  0 WARNING(S),  0 ERROR(S)
